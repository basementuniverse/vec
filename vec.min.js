const{times:times,chunk:chunk,dot:dot}=require("@basementuniverse/utils"),vec2=(e,t)=>e||t?"object"==typeof e&&"x"in e&&"y"in e?{x:e.x||0,y:e.y||0}:{x:e,y:t??e}:{x:0,y:0};vec2.components=e=>[e.x,e.y],vec2.fromComponents=e=>vec2(...e.slice(0,2)),vec2.ux=()=>vec2(1,0),vec2.uy=()=>vec2(0,1),vec2.add=(e,t)=>({x:e.x+t.x,y:e.y+t.y}),vec2.mul=(e,t)=>({x:e.x*t,y:e.y*t}),vec2.sub=(e,t)=>({x:e.x-t.x,y:e.y-t.y}),vec2.len=e=>Math.sqrt(e.x*e.x+e.y*e.y),vec2.manhattan=e=>Math.abs(e.x)+Math.abs(e.y),vec2.nor=e=>{let t=vec2.len(e);return t?{x:e.x/t,y:e.y/t}:vec2()},vec2.dot=(e,t)=>e.x*t.x+e.y*t.y,vec2.rot=(e,t)=>{let a=Math.sin(t),c=Math.cos(t);return{x:c*e.x-a*e.y,y:a*e.x+c*e.y}},vec2.rotf=(e,t)=>{switch(t){case 1:return vec2(e.y,-e.x);case-1:return vec2(-e.y,e.x);case 2:case-2:return vec2(-e.x,-e.y);default:return e}},vec2.eq=(e,t)=>e.x===t.x&&e.y===t.y,vec2.rad=e=>Math.atan2(e.y,e.x),vec2.cpy=e=>vec2(e),vec2.map=(e,t)=>({x:t(e.x,"x"),y:t(e.y,"y")}),vec2.str=(e,t=", ")=>`${e.x}${t}${e.y}`,vec2.swiz=(e,t="..")=>{const a=[];return t.split("").forEach(((t,c)=>{switch(t){case"x":case"u":a.push(e.x);break;case"y":case"v":a.push(e.y);break;case"X":case"U":a.push(-e.x);break;case"Y":case"V":a.push(-e.y);break;case"0":default:a.push(0);break;case"1":a.push(1);break;case".":a.push([e.x,e.y][c]??0)}})),a},vec2.polar=e=>({r:vec2.len(e),theta:Math.atan2(e.y,e.x)}),vec2.fromPolar=(e,t)=>vec2(e*Math.cos(t),e*Math.sin(t));const vec3=(e,t,a)=>e||t||a?"object"==typeof e&&"x"in e&&"y"in e&&"z"in e?{x:e.x||0,y:e.y||0,z:e.z||0}:"object"!=typeof e||"z"in e?{x:e,y:t??e,z:a??e}:{x:e.x||0,y:e.y||0,z:t||0}:{x:0,y:0,z:0};vec3.components=e=>[e.x,e.y,e.z],vec3.fromComponents=e=>vec3(...e.slice(0,3)),vec3.ux=()=>vec3(1,0,0),vec3.uy=()=>vec3(0,1,0),vec3.uz=()=>vec3(0,0,1),vec3.add=(e,t)=>({x:e.x+t.x,y:e.y+t.y,z:e.z+t.z}),vec3.mul=(e,t)=>({x:e.x*t,y:e.y*t,z:e.z*t}),vec3.sub=(e,t)=>({x:e.x-t.x,y:e.y-t.y,z:e.z-t.z}),vec3.len=e=>Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z),vec3.manhattan=e=>Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z),vec3.nor=e=>{let t=vec3.len(e);return t?{x:e.x/t,y:e.y/t,z:e.z/t}:vec3()},vec3.dot=(e,t)=>e.x*t.x+e.y*t.y+e.z*t.z,vec3.rot=(e,t)=>vec3(vec3.dot(vec3.fromComponents(mat.row(t,1)),e),vec3.dot(vec3.fromComponents(mat.row(t,2)),e),vec3.dot(vec3.fromComponents(mat.row(t,3)),e)),vec3.rotx=(e,t)=>vec3(e.x,e.y*Math.cos(t)-e.z*Math.sin(t),e.y*Math.sin(t)+e.z*Math.cos(t)),vec3.roty=(e,t)=>vec3(e.x*Math.cos(t)+e.z*Math.sin(t),e.y,-e.x*Math.sin(t)+e.z*Math.cos(t)),vec3.rotz=(e,t)=>vec3(e.x*Math.cos(t)-e.y*Math.sin(t),e.x*Math.sin(t)+e.y*Math.cos(t),e.z),vec3.rotq=(e,t)=>{if(4!==t.length)return vec3();const a=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]+t[3]*t[3]);if(0===a)return vec3();const c=[t[0]/a,t[1]/a,t[2]/a,t[3]/a],s=vec3(...c.slice(0,3)),r=c[3];return vec3.add(vec3.add(vec3.mul(s,2*vec3.dot(s,e)),vec3.mul(e,r*r-vec3.dot(s,s))),vec3.mul(vec3.cross(s,e),2*r))},vec3.rota=(e,t)=>vec3.rotz(vec3.roty(vec3.rotx(e,t.x),t.y),t.z),vec3.cross=(e,t)=>vec3(e.y*t.z-e.z*t.y,e.z*t.x-e.x*t.z,e.x*t.y-e.y*t.x),vec3.eq=(e,t)=>e.x===t.x&&e.y===t.y&&e.z===t.z,vec3.radx=e=>Math.atan2(e.z,e.y),vec3.rady=e=>Math.atan2(e.x,e.y),vec3.radz=e=>Math.atan2(e.y,e.z),vec3.cpy=e=>vec3(e),vec3.map=(e,t)=>({x:t(e.x,"x"),y:t(e.y,"y"),z:t(e.z,"z")}),vec3.str=(e,t=", ")=>`${e.x}${t}${e.y}${t}${e.z}`,vec3.swiz=(e,t="...")=>{const a=[];return t.split("").forEach(((t,c)=>{switch(t){case"x":case"u":case"r":a.push(e.x);break;case"y":case"v":case"g":a.push(e.y);break;case"z":case"w":case"b":a.push(e.z);break;case"X":case"U":case"R":a.push(-e.x);break;case"Y":case"V":case"G":a.push(-e.y);break;case"Z":case"W":case"B":a.push(-e.z);break;case"0":default:a.push(0);break;case"1":a.push(1);break;case".":a.push([e.x,e.y,e.z][c]??0)}})),a},vec3.polar=e=>{let t=vec3.len(e);return{r:t,theta:Math.acos(e.y/t),phi:Math.atan2(e.z,e.x)}},vec3.fromPolar=(e,t,a)=>{const c=Math.sin(t);return vec3(e*c*Math.cos(a),e*Math.cos(t),e*c*Math.sin(a))};const mat=(e=4,t=4,a=[])=>({m:e,n:t,entries:a.concat(Array(e*t).fill(0)).slice(0,e*t)});mat.identity=e=>mat(e,e,Array(e*e).fill(0).map(((t,a)=>+(Math.floor(a/e)===a%e)))),mat.get=(e,t,a)=>e.entries[a-1+(t-1)*e.n],mat.set=(e,t,a,c)=>{e.entries[a-1+(t-1)*e.n]=c},mat.row=(e,t)=>{const a=(t-1)*e.n;return e.entries.slice(a,a+e.n)},mat.col=(e,t)=>times((a=>mat.get(e,a+1,t)),e.m),mat.add=(e,t)=>e.m===t.m&&e.n===t.n&&mat.map(e,((e,a)=>e+t.entries[a])),mat.sub=(e,t)=>e.m===t.m&&e.n===t.n&&mat.map(e,((e,a)=>e-t.entries[a])),mat.mul=(e,t)=>{if(e.n!==t.m)return!1;const a=mat(e.m,t.n);for(let c=1;c<=e.m;c++)for(let s=1;s<=t.n;s++)mat.set(a,c,s,dot(mat.row(e,c),mat.col(t,s)));return a},mat.scale=(e,t)=>mat.map(e,(e=>e*t)),mat.trans=e=>mat(e.n,e.m,times((t=>mat.col(e,t+1)),e.n).flat()),mat.minor=(e,t,a)=>{if(e.m!==e.n)return!1;const c=[];for(let s=1;s<=e.m;s++)if(s!==t)for(let t=1;t<=e.n;t++)t!==a&&c.push(mat.get(e,s,t));return mat(e.m-1,e.n-1,c)},mat.det=e=>{if(e.m!==e.n)return!1;if(1===e.m)return e.entries[0];if(2===e.m)return e.entries[0]*e.entries[3]-e.entries[1]*e.entries[2];let t=0,a=1;for(let c=1;c<=e.n;c++)t+=a*e.entries[c-1]*mat.det(mat.minor(e,1,c)),a*=-1;return t},mat.nor=e=>{if(e.m!==e.n)return!1;const t=mat.det(e);return mat.map(e,(e=>e*t))},mat.adj=e=>{const t=mat(e.m,e.n);for(let a=1;a<=e.m;a++)for(let c=1;c<=e.n;c++)mat.set(t,a,c,mat.det(mat.minor(e,a,c)));const a=mat.map(t,((e,t)=>e*(t%2?-1:1)));return mat.trans(a)},mat.inv=e=>{if(e.m!==e.n)return!1;const t=mat.det(e);return 0!==t&&mat.scale(mat.adj(e),1/t)},mat.eq=(e,t)=>e.m===t.m&&e.n===t.n&&mat.str(e)===mat.str(t),mat.cpy=e=>mat(e.m,e.n,[...e.entries]),mat.map=(e,t)=>mat(e.m,e.n,e.entries.map(t)),mat.str=(e,t=", ",a="\n")=>chunk(e.entries,e.n).map((e=>e.join(t))).join(a),"undefined"!=typeof module&&(module.exports={vec2:vec2,vec3:vec3,mat:mat});